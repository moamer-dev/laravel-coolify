{"version":3,"file":"products.js","names":["KTAppEcommerceProducts","table","tableEl","dt","handleDeleteRows","querySelectorAll","forEach","d","addEventListener","e","preventDefault","parent","target","closest","productName","querySelector","innerText","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","row","$","remove","draw","dismiss","init","document","DataTable","info","order","pageLength","columnDefs","render","number","targets","orderable","on","search","filterStatus","column","handleStatusFilter","KTUtil","onDOMContentLoaded"],"sources":["apps/ecommerce/catalog/products.js"],"mappings":"AAAA,aAGA,IAAIA,uBAAyB,WAEzB,IAAIC,EACAC,EACAC,EA2CAC,EAAmB,KAEGF,EAAQG,iBAAiB,mDAEjCC,SAAQC,IAElBA,EAAEC,iBAAiB,SAAS,SAAUC,GAClCA,EAAEC,iBAGF,MAAMC,EAASF,EAAEG,OAAOC,QAAQ,MAG1BC,EAAcH,EAAOI,cAAc,qDAAqDC,UAG9FC,KAAKC,KAAK,CACNC,KAAM,mCAAqCL,EAAc,IACzDM,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,eACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,yBACfC,aAAc,0CAEnBC,MAAK,SAAUC,GACVA,EAAOC,MACPb,KAAKC,KAAK,CACNC,KAAM,oBAAsBL,EAAc,KAC1CM,KAAM,UACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,6BAEpBE,MAAK,WAEJzB,EAAG4B,IAAIC,EAAErB,IAASsB,SAASC,MAC/B,IAC0B,WAAnBL,EAAOM,SACdlB,KAAKC,KAAK,CACNC,KAAML,EAAc,oBACpBM,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,4BAI/B,GACJ,GAAC,GACH,EAIN,MAAO,CACHU,KAAM,WACFnC,EAAQ,+BACRC,EAAUmC,SAAStB,cAAcd,IAnGrCE,EAAK,IAAImC,UAAUrC,EAAO,CACtBsC,MAAQ,EACRC,MAAS,GACTC,WAAc,GACdC,WAAc,CACV,CAAEC,OAAQL,UAAUK,OAAOC,OAAO,IAAK,IAAK,GAAIC,QAAS,GACzD,CAAEC,WAAW,EAAOD,QAAS,GAC7B,CAAEC,WAAW,EAAOD,QAAS,OAKlCE,GAAG,QAAQ,WACV3C,GACJ,IAKqBiC,SAAStB,cAAc,+CAC/BP,iBAAiB,SAAS,SAAUC,GAC7CN,EAAG6C,OAAOvC,EAAEG,OAAOkB,OAAOI,MAC9B,IAIqB,MACrB,MAAMe,EAAeZ,SAAStB,cAAc,+CAC5CiB,EAAEiB,GAAcF,GAAG,UAAUtC,IACzB,IAAIqB,EAAQrB,EAAEG,OAAOkB,MACR,QAAVA,IACCA,EAAQ,IAEZ3B,EAAG+C,OAAO,GAAGF,OAAOlB,GAAOI,MAAM,GACnC,EAqEEiB,GACA/C,GACJ,EAER,CApH6B,GAuH7BgD,OAAOC,oBAAmB,WACtBrD,uBAAuBoC,MAC3B","ignoreList":[],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAppEcommerceProducts = function () {\r\n    // Shared variables\r\n    var table;\r\n    var tableEl;\r\n    var dt;\r\n\r\n    // Private functions\r\n    var initDatatable = function () {\r\n        // Init dt --- more info on dts: https://dts.net/manual/\r\n        dt = new DataTable(table, {\r\n            \"info\": false,\r\n            'order': [],\r\n            'pageLength': 10,\r\n            'columnDefs': [\r\n                { render: DataTable.render.number(',', '.', 2), targets: 4},\r\n                { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\r\n                { orderable: false, targets: 7 }, // Disable ordering on column 7 (actions)\r\n            ]\r\n        });\r\n\r\n        // Re-init functions on dt re-draws\r\n        dt.on('draw', function () {\r\n            handleDeleteRows();\r\n        });\r\n    }\r\n\r\n    // Search Datatable --- official docs reference: https://dts.net/reference/api/search()\r\n    var handleSearchDatatable = () => {\r\n        const filterSearch = document.querySelector('[data-kt-ecommerce-product-filter=\"search\"]');\r\n        filterSearch.addEventListener('keyup', function (e) {\r\n            dt.search(e.target.value).draw();\r\n        });\r\n    }\r\n\r\n    // Handle status filter dropdown\r\n    var handleStatusFilter = () => {\r\n        const filterStatus = document.querySelector('[data-kt-ecommerce-product-filter=\"status\"]');\r\n        $(filterStatus).on('change', e => {\r\n            let value = e.target.value;\r\n            if(value === 'all'){\r\n                value = '';\r\n            }\r\n            dt.column(6).search(value).draw();\r\n        });\r\n    }\r\n\r\n    // Delete cateogry\r\n    var handleDeleteRows = () => {\r\n        // Select all delete buttons\r\n        const deleteButtons = tableEl.querySelectorAll('[data-kt-ecommerce-product-filter=\"delete_row\"]');\r\n\r\n        deleteButtons.forEach(d => {\r\n            // Delete button on click\r\n            d.addEventListener('click', function (e) {\r\n                e.preventDefault();\r\n\r\n                // Select parent row\r\n                const parent = e.target.closest('tr');\r\n\r\n                // Get category name\r\n                const productName = parent.querySelector('[data-kt-ecommerce-product-filter=\"product_name\"]').innerText;\r\n\r\n                // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\r\n                Swal.fire({\r\n                    text: \"Are you sure you want to delete \" + productName + \"?\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: \"Yes, delete!\",\r\n                    cancelButtonText: \"No, cancel\",\r\n                    customClass: {\r\n                        confirmButton: \"btn fw-bold btn-danger\",\r\n                        cancelButton: \"btn fw-bold btn-active-light-primary\"\r\n                    }\r\n                }).then(function (result) {\r\n                    if (result.value) {\r\n                        Swal.fire({\r\n                            text: \"You have deleted \" + productName + \"!.\",\r\n                            icon: \"success\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn fw-bold btn-primary\",\r\n                            }\r\n                        }).then(function () {\r\n                            // Remove current row\r\n                            dt.row($(parent)).remove().draw();\r\n                        });\r\n                    } else if (result.dismiss === 'cancel') {\r\n                        Swal.fire({\r\n                            text: productName + \" was not deleted.\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn fw-bold btn-primary\",\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            table = '#kt_ecommerce_products_table';\r\n            tableEl = document.querySelector(table);\r\n\r\n            initDatatable();\r\n            handleSearchDatatable();\r\n            handleStatusFilter();\r\n            handleDeleteRows();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTAppEcommerceProducts.init();\r\n});\r\n"]}